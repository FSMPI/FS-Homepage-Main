// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                              String                @id @default(cuid())
  name                            String                @default("")
  email                           String                @unique @default("")
  password                        String?
  from_Vertreter_nutzer_email     Vertreter[]           @relation("Vertreter_nutzer_email")
  from_feriensprechstunden_person feriensprechstunden[] @relation("feriensprechstunden_person")
}

model Vertreter {
  id                 String  @id @default(cuid())
  nutzer_email       User?   @relation("Vertreter_nutzer_email", fields: [nutzer_emailId], references: [id])
  nutzer_emailId     String? @map("user_fk")
  rolle              String
  grad               String  @default("BACHELOR") @map("degree")
  feld               String  @default("SCIENCE") @map("field")
  hauptfach          String  @map("primary_course")
  zweitfach          String? @map("secondary_course")
  Lehramt            String? @map("lectureship")
  semester           Int
  portrait_filesize  Int?
  portrait_extension String?
  portrait_width     Int?
  portrait_height    Int?
  portrait_mode      String?
  portrait_id        String?

  @@index([nutzer_emailId])
}

model feriensprechstunden {
  id     String   @id @default(cuid())
  tag    DateTime @unique @map("day")
  person User[]   @relation("feriensprechstunden_person")
}

model Post {
  id      String @id @default(cuid())
  content Json   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Film {
  id             String    @id @default(cuid())
  titel          String    @unique @default("") @map("title")
  datum          DateTime  @unique @map("date")
  beschreibung   String    @default("") @map("description")
  orte           Filmort[] @relation("Film_orte")
  jahr           Int       @map("year")
  dauer          Int       @map("duration")
  genres         Genre[]   @relation("Film_genres")
  bild_filesize  Int?
  bild_extension String?
  bild_width     Int?
  bild_height    Int?
  bild_mode      String?
  bild_id        String?
}

model Filmort {
  id             String @id @default(cuid())
  ort            String @unique @default("") @map("location")
  from_Film_orte Film[] @relation("Film_orte")
}

model Genre {
  id                           String              @id @default(cuid())
  genre                        String              @unique @default("") @map("genre")
  from_Film_genres             Film[]              @relation("Film_genres")
  from_GenreUebersetzung_genre GenreUebersetzung[] @relation("GenreUebersetzung_genre")
}

model Sprachen {
  id                             String              @id @default(cuid())
  sprach_code                    String              @unique @default("") @map("language_code")
  from_GenreUebersetzung_sprache GenreUebersetzung[] @relation("GenreUebersetzung_sprache")
}

model GenreUebersetzung {
  id           String    @id @default(cuid())
  genre        Genre?    @relation("GenreUebersetzung_genre", fields: [genreId], references: [id])
  genreId      String?   @map("genre")
  sprache      Sprachen? @relation("GenreUebersetzung_sprache", fields: [spracheId], references: [id])
  spracheId    String?   @map("sprache")
  uebersetzung String    @default("") @map("translation")

  @@index([genreId])
  @@index([spracheId])
}

model tester {
  id   String @id @default(cuid())
  test Int?
}